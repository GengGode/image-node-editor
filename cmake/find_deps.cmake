function(find_static_library library_name library_root_dir)
    file(GLOB_RECURSE library_release_files ${library_root_dir}-release/lib/*.lib)
    file(GLOB_RECURSE library_debug_files ${library_root_dir}-debug/lib/*.lib)
    file(GLOB_RECURSE binrary_releaase_files ${library_root_dir}-release/bin/*.dll)
    file(GLOB_RECURSE binrary_debug_files ${library_root_dir}-debug/bin/*.dll)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        set(include_dir ${library_root_dir}-debug/include)
        set(library_dir ${library_root_dir}-debug/lib)
        set(binrary_dir ${library_root_dir}-debug/bin)
    else()
        set(include_dir ${library_root_dir}-release/include)
        set(library_dir ${library_root_dir}-release/lib)
        set(binrary_dir ${library_root_dir}-release/bin)
    endif()
    # output
    set(${library_name}_INCLUDE_DIR ${include_dir} PARENT_SCOPE)
    set(${library_name}_LIBRARY_DIR ${library_dir} PARENT_SCOPE)
    set(${library_name}_BINRARY_DIR ${binrary_dir} PARENT_SCOPE)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        set(${library_name}_LIBRARYS_DEBUG ${library_debug_files} PARENT_SCOPE)
        set(library_files ${library_debug_files})
        set(${library_name}_BINRARYS_DEBUG ${binrary_debug_files} PARENT_SCOPE)
        set(binrary_files ${binrary_debug_files})
    else()
        set(${library_name}_LIBRARYS_RELEASE ${library_release_files} PARENT_SCOPE)
        set(library_files ${library_release_files})
        set(${library_name}_BINRARYS_RELEASE ${binrary_releaase_files} PARENT_SCOPE)
        set(binrary_files ${binrary_releaase_files})
    endif()
    set(${library_name}_LIBRARYS ${library_files} PARENT_SCOPE)
    set(${library_name}_BINRARYS ${binrary_files} PARENT_SCOPE)
    # message(STATUS "find static library ${library_name} in ${library_root_dir}")
endfunction()
